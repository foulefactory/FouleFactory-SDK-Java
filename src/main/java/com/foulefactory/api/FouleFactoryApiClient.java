/*
 * FouleFactoryApiLib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ) on 09/14/2016
 */
package com.foulefactory.api;

import com.foulefactory.api.controllers.*;
import com.foulefactory.api.http.client.HttpClient;

public class FouleFactoryApiClient {
    /**
     * Singleton access to TaskAnswerTexts controller
     * @return	Returns the TaskAnswerTextsController instance 
     */
    public TaskAnswerTextsController getTaskAnswerTexts() {
        return TaskAnswerTextsController.getInstance();
    }

    /**
     * Singleton access to TaskAnswerChoices controller
     * @return	Returns the TaskAnswerChoicesController instance 
     */
    public TaskAnswerChoicesController getTaskAnswerChoices() {
        return TaskAnswerChoicesController.getInstance();
    }

    /**
     * Singleton access to Projects controller
     * @return	Returns the ProjectsController instance 
     */
    public ProjectsController getProjects() {
        return ProjectsController.getInstance();
    }

    /**
     * Singleton access to CsvFiles controller
     * @return	Returns the CsvFilesController instance 
     */
    public CsvFilesController getCsvFiles() {
        return CsvFilesController.getInstance();
    }

    /**
     * Singleton access to Account controller
     * @return	Returns the AccountController instance 
     */
    public AccountController getAccount() {
        return AccountController.getInstance();
    }

    /**
     * Singleton access to Templates controller
     * @return	Returns the TemplatesController instance 
     */
    public TemplatesController getTemplates() {
        return TemplatesController.getInstance();
    }

    /**
     * Singleton access to Tasks controller
     * @return	Returns the TasksController instance 
     */
    public TasksController getTasks() {
        return TasksController.getInstance();
    }

    /**
     * Singleton access to TaskLines controller
     * @return	Returns the TaskLinesController instance 
     */
    public TaskLinesController getTaskLines() {
        return TaskLinesController.getInstance();
    }

    /**
     * Get the shared http client currently being used for API calls
     * @return The http client instance currently being used
     */
    public HttpClient getSharedHttpClient() {
        return BaseController.getClientInstance();
    }
    
    /**
     * Set a shared http client to be used for API calls
     * @param httpClient The http client to use
     */
    public void setSharedHttpClient(HttpClient httpClient) {
        BaseController.setClientInstance(httpClient);
    }

    /**
     * Default constructor 
     */     
    public FouleFactoryApiClient() {	
	}

    /**
     * Client initialization constructor 
     */     
    public FouleFactoryApiClient(String basicAuthUserName, String basicAuthPassword) {
        this();
        Configuration.basicAuthUserName = basicAuthUserName;
        Configuration.basicAuthPassword = basicAuthPassword;
    }
}